"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7293],{32666:(e,t,n)=>{n.d(t,{Z:()=>p});var r=n(67294),l=n(97405),o=n(22808),a=n(30433),i=n(41284),s=n(36005);const c=e=>{let{props:t}=e;return t?r.createElement(r.Fragment,null,s.ZP.isEmpty(t)?r.createElement("pre",{className:"preText"},"This component does not have props defined"):r.createElement("table",null,r.createElement("thead",null,r.createElement("tr",null,r.createElement("th",null,"Name"),r.createElement("th",null,"Type"),r.createElement("th",null,"Default Value"),r.createElement("th",null,"Required"),r.createElement("th",null,"Description"))),r.createElement("tbody",null,Object.keys(t).map((e=>r.createElement("tr",{key:e},r.createElement("td",null,r.createElement("code",null,e)),r.createElement("td",{style:{minWidth:200}},t[e].type?.name),r.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),r.createElement("td",null,t[e].required?"Yes":"No"),r.createElement("td",null,t[e].description))))))):null};function p(e){const t=(0,i.N)(e.componentName),{description:n,displayName:s,props:p}=t[0],m=`How to use the ${s} component`,u=`Full code for the ${s} component`;return r.createElement(r.Fragment,null,n,r.createElement("br",null),r.createElement("br",null),r.createElement(o.Z,null,r.createElement(a.Z,{value:"props",label:"Properties"},r.createElement(c,{props:p})),r.createElement(a.Z,{value:"example",label:"Example"},e.example&&r.createElement(l.Z,{title:m,className:"language-tsx test"},e.example)),r.createElement(a.Z,{value:"code",label:"Source Code"},e.codeString&&r.createElement(l.Z,{title:u,className:"language-tsx"},e.codeString)),r.createElement(a.Z,{value:"accessibility",label:"Accessibility"},r.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},41284:(e,t,n)=>{n.d(t,{N:()=>l});var r=n(52426);const l=e=>(0,r.ZP)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},85780:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>g,exampleString:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>m});var r=n(87462),l=(n(67294),n(3905));n(8209),n(97405);const o="import React, { FC } from 'react'\nimport { useEffect } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { ViewStyle } from 'react-native'\n\nimport { Button } from '@department-of-veterans-affairs/mobile-component-library'\n\nimport { AlertBox, Box, ClickToCallPhoneNumber, TextView, VAScrollView } from 'components'\nimport { Events } from 'constants/analytics'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { a11yLabelID, a11yLabelVA } from 'utils/a11yLabel'\nimport { logAnalyticsEvent } from 'utils/analytics'\nimport { displayedTextPhoneNumber } from 'utils/formattingUtils'\nimport { useTheme } from 'utils/hooks'\n\nexport type CallHelpCenterProps = {\n  /** optional function called when the Try again button is pressed */\n  onTryAgain?: () => void\n  /** optional text for the title */\n  titleText?: string\n  /** optional title a11y hint*/\n  titleA11yHint?: string\n  /** optional text for the error */\n  errorText?: string\n  /** optional a11y hint for the error */\n  errorA11y?: string\n  /** optional phone number */\n  callPhone?: string\n}\n\n/**A common component to show the help center contact info for when an error happens*/\nconst CallHelpCenter: FC<CallHelpCenterProps> = ({\n  onTryAgain,\n  titleText,\n  titleA11yHint,\n  errorText,\n  errorA11y,\n  callPhone,\n}) => {\n  const { t } = useTranslation(NAMESPACE.COMMON)\n  const theme = useTheme()\n\n  const scrollStyles: ViewStyle = {\n    justifyContent: 'center',\n  }\n\n  const containerStyles = {\n    mt: theme.dimensions.contentMarginTop,\n    mb: theme.dimensions.contentMarginBottom,\n  }\n  useEffect(() => {\n    logAnalyticsEvent(Events.vama_fail())\n  }, [])\n\n  const standardMarginBetween = theme.dimensions.standardMarginBetween\n\n  const tryAgain = () => {\n    logAnalyticsEvent(Events.vama_fail_refresh())\n    if (onTryAgain) {\n      onTryAgain()\n    }\n  }\n\n  return (\n    <VAScrollView contentContainerStyle={scrollStyles}>\n      <Box justifyContent=\"center\" {...containerStyles}>\n        <AlertBox\n          title={titleText ? titleText : t('errors.callHelpCenter.vaAppNotWorking')}\n          titleA11yLabel={titleA11yHint ? titleA11yHint : a11yLabelVA(t('errors.callHelpCenter.vaAppNotWorking'))}\n          text={onTryAgain ? t('errors.callHelpCenter.sorryWithRefresh') : t('errors.callHelpCenter.sorry')}\n          border=\"error\">\n          <Box>\n            <TextView\n              variant=\"MobileBody\"\n              paragraphSpacing={true}\n              mt={theme.paragraphSpacing.spacing20FontSize}\n              accessibilityLabel={errorA11y ? errorA11y : t('errors.callHelpCenter.informationLine.a11yLabel')}>\n              {errorText ? errorText : t('errors.callHelpCenter.informationLine')}\n            </TextView>\n            <ClickToCallPhoneNumber\n              a11yLabel={a11yLabelID(callPhone || t('8006982411'))}\n              displayedText={callPhone ? undefined : displayedTextPhoneNumber(t('8006982411'))}\n              phone={callPhone ? callPhone : t('8006982411')}\n            />\n            {onTryAgain && (\n              <Box mt={standardMarginBetween} accessibilityRole=\"button\">\n                <Button onPress={tryAgain} label={t('refresh')} testID={t('refresh')} />\n              </Box>\n            )}\n          </Box>\n        </AlertBox>\n      </Box>\n    </VAScrollView>\n  )\n}\n\nexport default CallHelpCenter\n";var a=n(32666);const i={},s=void 0,c={unversionedId:"Flagship design library/Components/Errors/CallHelpCenter",id:"Flagship design library/Components/Errors/CallHelpCenter",title:"CallHelpCenter",description:"",source:"@site/docs/Flagship design library/Components/Errors/CallHelpCenter.mdx",sourceDirName:"Flagship design library/Components/Errors",slug:"/Flagship design library/Components/Errors/CallHelpCenter",permalink:"/va-mobile-app/docs/Flagship design library/Components/Errors/CallHelpCenter",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"BasicError",permalink:"/va-mobile-app/docs/Flagship design library/Components/Errors/BasicError"},next:{title:"DowntimeError",permalink:"/va-mobile-app/docs/Flagship design library/Components/Errors/DowntimeError"}},p={},m=[],u="<CallHelpCenter\n    titleText={t('profile:disabilityRating.errorTitle')}\n    titleA11yHint={t('profile:disabilityRating.errorTitleA11y')}\n    callPhone={t('profile:disabilityRating.errorPhoneNumber')}\n/>",d={toc:m,exampleString:u},y="wrapper";function g(e){let{components:t,...n}=e;return(0,l.kt)(y,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(a.Z,{componentName:"CallHelpCenter",example:u,codeString:o,mdxType:"ComponentTopInfo"}))}g.isMDXComponent=!0}}]);