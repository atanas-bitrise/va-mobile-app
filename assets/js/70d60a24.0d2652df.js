"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1635],{32666:(e,t,n)=>{n.d(t,{Z:()=>p});var r=n(67294),l=n(97405),o=n(22808),a=n(30433),i=n(41284),s=n(36005);const c=e=>{let{props:t}=e;return t?r.createElement(r.Fragment,null,s.ZP.isEmpty(t)?r.createElement("pre",{className:"preText"},"This component does not have props defined"):r.createElement("table",null,r.createElement("thead",null,r.createElement("tr",null,r.createElement("th",null,"Name"),r.createElement("th",null,"Type"),r.createElement("th",null,"Default Value"),r.createElement("th",null,"Required"),r.createElement("th",null,"Description"))),r.createElement("tbody",null,Object.keys(t).map((e=>r.createElement("tr",{key:e},r.createElement("td",null,r.createElement("code",null,e)),r.createElement("td",{style:{minWidth:200}},t[e].type?.name),r.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),r.createElement("td",null,t[e].required?"Yes":"No"),r.createElement("td",null,t[e].description))))))):null};function p(e){const t=(0,i.N)(e.componentName),{description:n,displayName:s,props:p}=t[0],m=`How to use the ${s} component`,d=`Full code for the ${s} component`;return r.createElement(r.Fragment,null,n,r.createElement("br",null),r.createElement("br",null),r.createElement(o.Z,null,r.createElement(a.Z,{value:"props",label:"Properties"},r.createElement(c,{props:p})),r.createElement(a.Z,{value:"example",label:"Example"},e.example&&r.createElement(l.Z,{title:m,className:"language-tsx test"},e.example)),r.createElement(a.Z,{value:"code",label:"Source Code"},e.codeString&&r.createElement(l.Z,{title:d,className:"language-tsx"},e.codeString)),r.createElement(a.Z,{value:"accessibility",label:"Accessibility"},r.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},41284:(e,t,n)=>{n.d(t,{N:()=>l});var r=n(52426);const l=e=>(0,r.ZP)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},83391:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>f,exampleString:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>m});var r=n(87462),l=(n(67294),n(3905));n(8209),n(97405);const o="import React, { FC, Ref } from 'react'\nimport { ScrollView, ScrollViewProps, ViewStyle } from 'react-native'\nimport { useSafeAreaInsets } from 'react-native-safe-area-context'\n\nimport { VABackgroundColors } from 'styles/theme'\n\nimport { useTheme } from '../utils/hooks'\n\nexport type VAScrollViewProps = {\n  /** Optional reference prop to determine scroll position */\n  scrollViewRef?: Ref<ScrollView>\n  /** optional background color to override the main background */\n  backgroundColor?: keyof VABackgroundColors\n  /** remove insets */\n  removeInsets?: boolean\n} & ScrollViewProps\n\n/** A common component that provides a scrollable view. Use this instead of ScrollView.\n * This component is a wrapper for react-native ScrollView that has a scrollbar styling fix */\nconst VAScrollView: FC<VAScrollViewProps> = (props) => {\n  const insets = useSafeAreaInsets()\n  const theme = useTheme()\n\n  const style = {\n    paddingRight: props.removeInsets ? undefined : insets.right,\n    paddingLeft: props.removeInsets ? undefined : insets.left,\n    backgroundColor: props.backgroundColor\n      ? theme.colors.background[props.backgroundColor as keyof VABackgroundColors]\n      : theme.colors.background.main,\n  }\n\n  // Grow container so short children like loading indicators are vertically centered\n  const contentContainerStyle: ViewStyle = { flexGrow: 1 }\n\n  return (\n    /**\n     * force scroll position by default to avoid visual bug where scrollbar appears in the center of a screen\n     * scrollIndicatorInsets is an iOS only prop, this bug only appears on iOS\n     */\n    <ScrollView\n      ref={props.scrollViewRef}\n      scrollIndicatorInsets={{ right: 1 }}\n      contentContainerStyle={contentContainerStyle}\n      {...props}\n      style={style}\n    />\n  )\n}\n\nexport default VAScrollView\n";var a=n(32666);const i={},s=void 0,c={unversionedId:"Flagship design library/Components/Uncategorized/VAScrollView",id:"Flagship design library/Components/Uncategorized/VAScrollView",title:"VAScrollView",description:"",source:"@site/docs/Flagship design library/Components/Uncategorized/VAScrollView.mdx",sourceDirName:"Flagship design library/Components/Uncategorized",slug:"/Flagship design library/Components/Uncategorized/VAScrollView",permalink:"/va-mobile-app/docs/Flagship design library/Components/Uncategorized/VAScrollView",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"VAImage",permalink:"/va-mobile-app/docs/Flagship design library/Components/Uncategorized/VAImage"},next:{title:"Overview",permalink:"/va-mobile-app/docs/Flagship design library/Patterns/Overview"}},p={},m=[],d="return (\n    <VAScrollView>\n        <Box />\n    </VAScrollView>\n)",u={toc:m,exampleString:d},g="wrapper";function f(e){let{components:t,...n}=e;return(0,l.kt)(g,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(a.Z,{componentName:"VAScrollView",example:d,codeString:o,mdxType:"ComponentTopInfo"}))}f.isMDXComponent=!0}}]);