"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7981],{32666:(e,t,n)=>{n.d(t,{Z:()=>c});var a=n(67294),s=n(97405),l=n(22808),r=n(30433),o=n(41284),i=n(36005);const m=e=>{let{props:t}=e;return t?a.createElement(a.Fragment,null,i.ZP.isEmpty(t)?a.createElement("pre",{className:"preText"},"This component does not have props defined"):a.createElement("table",null,a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null,"Name"),a.createElement("th",null,"Type"),a.createElement("th",null,"Default Value"),a.createElement("th",null,"Required"),a.createElement("th",null,"Description"))),a.createElement("tbody",null,Object.keys(t).map((e=>a.createElement("tr",{key:e},a.createElement("td",null,a.createElement("code",null,e)),a.createElement("td",{style:{minWidth:200}},t[e].type?.name),a.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),a.createElement("td",null,t[e].required?"Yes":"No"),a.createElement("td",null,t[e].description))))))):null};function c(e){const t=(0,o.N)(e.componentName),{description:n,displayName:i,props:c}=t[0],p=`How to use the ${i} component`,u=`Full code for the ${i} component`;return a.createElement(a.Fragment,null,n,a.createElement("br",null),a.createElement("br",null),a.createElement(l.Z,null,a.createElement(r.Z,{value:"props",label:"Properties"},a.createElement(m,{props:c})),a.createElement(r.Z,{value:"example",label:"Example"},e.example&&a.createElement(s.Z,{title:p,className:"language-tsx test"},e.example)),a.createElement(r.Z,{value:"code",label:"Source Code"},e.codeString&&a.createElement(s.Z,{title:u,className:"language-tsx"},e.codeString)),a.createElement(r.Z,{value:"accessibility",label:"Accessibility"},a.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},41284:(e,t,n)=>{n.d(t,{N:()=>s});var a=n(52426);const s=e=>(0,a.ZP)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},99077:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>T,exampleString:()=>u,frontMatter:()=>o,metadata:()=>m,toc:()=>p});var a=n(87462),s=(n(67294),n(3905));n(8209),n(97405);const l="import React, { FC } from 'react'\n\nimport { testIdProps } from 'utils/accessibility'\nimport { useTheme } from 'utils/hooks'\n\nimport Box from './Box'\nimport TextView from './TextView'\n\nexport type CountTagProps = {\n  /**number to be shown on the tag */\n  unread: number\n}\n\n/** A common component to show a count of a particular item within a page before clicking to enter that page.\n * For example, this tag would be used to display the number of unread messages in one's inbox. */\nconst MessagesCountTag: FC<CountTagProps> = ({ unread }) => {\n  const theme = useTheme()\n  return (\n    <Box\n      minWidth={theme.dimensions.tagMinWidth}\n      justifyContent={'center'}\n      alignSelf={'center'}\n      backgroundColor=\"unreadMessagesTag\"\n      borderRadius={2}\n      {...testIdProps(unread.toString())}\n      accessible={true}>\n      <TextView flexWrap={'wrap'} variant=\"UnreadMessagesTag\" px={10} pt={3}>\n        {unread}\n      </TextView>\n    </Box>\n  )\n}\n\nexport default MessagesCountTag\n";var r=n(32666);const o={},i=void 0,m={unversionedId:"Flagship design library/Components/Tags/MessagesCountTag",id:"Flagship design library/Components/Tags/MessagesCountTag",title:"MessagesCountTag",description:"",source:"@site/docs/Flagship design library/Components/Tags/MessagesCountTag.mdx",sourceDirName:"Flagship design library/Components/Tags",slug:"/Flagship design library/Components/Tags/MessagesCountTag",permalink:"/va-mobile-app/docs/Flagship design library/Components/Tags/MessagesCountTag",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tags",permalink:"/va-mobile-app/docs/Flagship design library/Components/Tags/"},next:{title:"Tag",permalink:"/va-mobile-app/docs/Flagship design library/Components/Tags/Tag"}},c={},p=[],u="<MessagesCountTag unread={tagCount} />",g={toc:p,exampleString:u},d="wrapper";function T(e){let{components:t,...n}=e;return(0,s.kt)(d,(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)(r.Z,{componentName:"MessagesCountTag",example:u,codeString:l,mdxType:"ComponentTopInfo"}))}T.isMDXComponent=!0}}]);