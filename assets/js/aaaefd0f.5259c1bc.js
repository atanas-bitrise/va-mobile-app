"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7739],{7644:(e,t,n)=>{n.d(t,{A:()=>m});var o=n(96540),r=n(54610),l=n(3384),i=n(31347),a=n(28057),s=n(84476);const p=e=>{let{props:t}=e;return t?o.createElement(o.Fragment,null,s.Ay.isEmpty(t)?o.createElement("pre",{className:"preText"},"This component does not have props defined"):o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",null,"Name"),o.createElement("th",null,"Type"),o.createElement("th",null,"Default Value"),o.createElement("th",null,"Required"),o.createElement("th",null,"Description"))),o.createElement("tbody",null,Object.keys(t).map((e=>o.createElement("tr",{key:e},o.createElement("td",null,o.createElement("code",null,e)),o.createElement("td",{style:{minWidth:200}},t[e].type?.name),o.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),o.createElement("td",null,t[e].required?"Yes":"No"),o.createElement("td",null,t[e].description))))))):null};function m(e){const t=(0,a.d)(e.componentName),{description:n,displayName:s,props:m}=t[0],c=`How to use the ${s} component`,d=`Full code for the ${s} component`;return o.createElement(o.Fragment,null,n,o.createElement("br",null),o.createElement("br",null),o.createElement(l.A,null,o.createElement(i.A,{value:"props",label:"Properties"},o.createElement(p,{props:m})),o.createElement(i.A,{value:"example",label:"Example"},e.example&&o.createElement(r.A,{title:c,className:"language-tsx test"},e.example)),o.createElement(i.A,{value:"code",label:"Source Code"},e.codeString&&o.createElement(r.A,{title:d,className:"language-tsx"},e.codeString)),o.createElement(i.A,{value:"accessibility",label:"Accessibility"},o.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},28057:(e,t,n)=>{n.d(t,{d:()=>r});var o=n(2736);const r=e=>(0,o.Ay)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},99423:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>A,exampleString:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var o=n(58168),r=(n(96540),n(15680));n(41873),n(54610);const l="import React, { FC, useEffect, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\n\nimport { useAppVersion } from 'api/device/getAppVersion'\nimport { Box, TextView } from 'components'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { VATextColors, VATypographyThemeVariants } from 'styles/theme'\nimport { getBuildNumber } from 'utils/deviceData'\nimport { useTheme } from 'utils/hooks'\n\nexport type AppVersionAndBuildProps = {\n  /** color of the text */\n  textColor?: keyof VATextColors\n  /** font weight of the text */\n  textWeight?: keyof VATypographyThemeVariants\n}\n\n/**\n * Common component to display the apps version and build number\n */\nconst AppVersionAndBuild: FC<AppVersionAndBuildProps> = ({ textColor = 'bodyText', textWeight = 'MobileBody' }) => {\n  const { t } = useTranslation(NAMESPACE.COMMON)\n  const theme = useTheme()\n  const [buildNumber, setBuildNumber] = useState<number>()\n  const appVersionQuery = useAppVersion()\n\n  useEffect(() => {\n    async function getVersionAndBuild() {\n      const build = await getBuildNumber()\n      setBuildNumber(build)\n    }\n\n    getVersionAndBuild()\n  }, [])\n\n  return (\n    <Box mb={theme.dimensions.contentMarginBottom} justifyContent={'center'} alignItems={'center'}>\n      <TextView testID=\"AppVersionTestID\" variant={textWeight} flexDirection=\"row\" color={textColor}>\n        {t('versionAndBuild', { versionName: appVersionQuery.data, buildNumber })}\n      </TextView>\n    </Box>\n  )\n}\n\nexport default AppVersionAndBuild\n";var i=n(7644);const a={},s=void 0,p={unversionedId:"Flagship design library/Components/Uncategorized/AppVersionAndBuild",id:"Flagship design library/Components/Uncategorized/AppVersionAndBuild",title:"AppVersionAndBuild",description:"",source:"@site/docs/Flagship design library/Components/Uncategorized/AppVersionAndBuild.mdx",sourceDirName:"Flagship design library/Components/Uncategorized",slug:"/Flagship design library/Components/Uncategorized/AppVersionAndBuild",permalink:"/va-mobile-app/docs/Flagship design library/Components/Uncategorized/AppVersionAndBuild",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Uncategorized",permalink:"/va-mobile-app/docs/Flagship design library/Components/Uncategorized/"},next:{title:"NotificationManager",permalink:"/va-mobile-app/docs/Flagship design library/Components/Uncategorized/NotificationManager"}},m={},c=[],d="<AppVersionAndBuild textColor={'primaryContrast'} />",u={toc:c,exampleString:d},g="wrapper";function A(e){let{components:t,...n}=e;return(0,r.yg)(g,(0,o.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)(i.A,{componentName:"AppVersionAndBuild",example:d,codeString:l,mdxType:"ComponentTopInfo"}))}A.isMDXComponent=!0}}]);