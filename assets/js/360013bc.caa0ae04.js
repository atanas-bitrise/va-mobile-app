"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[705],{3557:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>g,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>r});var n=o(58168),a=(o(96540),o(15680));o(41873);const i={title:"Debugging Tools",sidebar_position:4},s="Debugging Instructions",l={unversionedId:"Engineering/FrontEnd/DebuggingToolsInstructions",id:"Engineering/FrontEnd/DebuggingToolsInstructions",title:"Debugging Tools",description:"This page shows the different debug tools that we use to debug the VAMobile app. You can use your prefer method.",source:"@site/docs/Engineering/FrontEnd/DebuggingToolsInstructions.md",sourceDirName:"Engineering/FrontEnd",slug:"/Engineering/FrontEnd/DebuggingToolsInstructions",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/DebuggingToolsInstructions",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Debugging Tools",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"useValidateMessageWithSignature",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/CustomHooks/useValidateMessageWithSignature"},next:{title:"Development Setup Process",permalink:"/va-mobile-app/docs/Engineering/FrontEnd/DevSetupProcess"}},g={},r=[{value:"Launching The Debugger",id:"launching-the-debugger",level:2},{value:"IOS",id:"ios",level:3},{value:"Android",id:"android",level:3},{value:"Debugging Tools",id:"debugging-tools",level:2},{value:"Chrome Developers Tools",id:"chrome-developers-tools",level:3},{value:"React Native Developer Tools (standalone application)",id:"react-native-developer-tools-standalone-application",level:3},{value:"VSCode React Native Tools Extension",id:"vscode-react-native-tools-extension",level:3}],d={toc:r},p="wrapper";function c(e){let{components:t,...i}=e;return(0,a.yg)(p,(0,n.A)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"debugging-instructions"},"Debugging Instructions"),(0,a.yg)("p",null,"This page shows the different debug tools that we use to debug the VAMobile app. You can use your prefer method."),(0,a.yg)("admonition",{type:"important"},(0,a.yg)("p",{parentName:"admonition"},"  For all the debugging tools you need to ",(0,a.yg)("inlineCode",{parentName:"p"},"yarn start")," the ",(0,a.yg)("inlineCode",{parentName:"p"},"metro server")," so that the debugger can  connect to it or it will not work.")),(0,a.yg)("h2",{id:"launching-the-debugger"},"Launching The Debugger"),(0,a.yg)("p",null,"This section will apply to all the tools. More information on the ",(0,a.yg)("a",{parentName:"p",href:"https://reactnative.dev/docs/debugging"},"react native debugging page")),(0,a.yg)("h3",{id:"ios"},"IOS"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"If on ",(0,a.yg)("inlineCode",{parentName:"p"},"physical device Shake your device"),". If using a ",(0,a.yg)("inlineCode",{parentName:"p"},"simulator")," press the shortcut  ",(0,a.yg)("inlineCode",{parentName:"p"},"\u2318D")," or by selecting the ",(0,a.yg)("inlineCode",{parentName:"p"},"Shake Gesture")," inside the hardware menu in the simulator.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"On the Action Sheet select ",(0,a.yg)("inlineCode",{parentName:"p"},"Debug with Chrome")),(0,a.yg)("p",{parentName:"li"},(0,a.yg)("img",{alt:"IOS Debug Menu",src:o(28727).A,width:"400",height:"866"})," "))),(0,a.yg)("h3",{id:"android"},"Android"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Ff on ",(0,a.yg)("inlineCode",{parentName:"p"},"physical device Shake your device"),". If using a ",(0,a.yg)("inlineCode",{parentName:"p"},"emulator")," press the shortcut  ",(0,a.yg)("inlineCode",{parentName:"p"},"\u2318M"),".")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"On the dialog select ",(0,a.yg)("inlineCode",{parentName:"p"},"Debug")),(0,a.yg)("p",{parentName:"li"},(0,a.yg)("img",{alt:"Android Debug Menu",src:o(15561).A,width:"400",height:"822"})," "))),(0,a.yg)("h2",{id:"debugging-tools"},"Debugging Tools"),(0,a.yg)("p",null," This sections shows the different debugging tools you can use. By default the chrome developers tools will open if no other tool is already open."),(0,a.yg)("admonition",{type:"important"},(0,a.yg)("p",{parentName:"admonition"},"You must have only the tool you want to use open so that the debugger connects to it.")),(0,a.yg)("h3",{id:"chrome-developers-tools"},"Chrome Developers Tools"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Launch the debugger from the device debug menu.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"The ",(0,a.yg)("inlineCode",{parentName:"p"},"React Native Debugger")," page will open in Chrome on url ",(0,a.yg)("inlineCode",{parentName:"p"},"http://localhost:8081/debugger-ui/"),". You will know if the device is connected in the ",(0,a.yg)("inlineCode",{parentName:"p"},"Status")," section."),(0,a.yg)("p",{parentName:"li"},(0,a.yg)("img",{alt:"React Native Debugger",src:o(4208).A,width:"1127",height:"418"})," ")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Open the developers tools. From the developers tools you can see the elements, console outputs and source files."),(0,a.yg)("p",{parentName:"li"},"In the element you can see the html tree."),(0,a.yg)("p",{parentName:"li"},(0,a.yg)("img",{alt:"Chrome Dev Tools Element",src:o(22820).A,width:"832",height:"328"})," "),(0,a.yg)("p",{parentName:"li"},"In the console you can see the redux logout messages and other console outputs."),(0,a.yg)("p",{parentName:"li"},(0,a.yg)("img",{alt:"Chrome Dev Tools Console",src:o(77691).A,width:"933",height:"657"})," "),(0,a.yg)("p",{parentName:"li"},"In the source under debuggerWorker you can find the javascript files that you can put breakpoints."),(0,a.yg)("p",{parentName:"li"},(0,a.yg)("img",{alt:"Chrome Dev Tools Source",src:o(61817).A,width:"841",height:"601"})," "))),(0,a.yg)("h3",{id:"react-native-developer-tools-standalone-application"},"React Native Developer Tools (standalone application)"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"If not installed yet follow the installation instructions in the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/facebook/react/tree/main/packages/react-devtools"},"react-devtools")," to install the react dev tools globally on your machine not in the project. And than install ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/jhen0409/react-native-debugger"},"standalone react native debugger app"))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"If installed or after the installation launch the react native debugger standalone app.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Launch the debugger from your device."),(0,a.yg)("p",{parentName:"li"},"With the standalone you can see the redux messages with the redux devtools, see the element tree and console logs in the console tab."),(0,a.yg)("p",{parentName:"li"},(0,a.yg)("img",{alt:"React Dev Tools",src:o(83716).A,width:"1544",height:"973"})," "),(0,a.yg)("p",{parentName:"li"},"In the source tab under RNDebuggerWorker you can find the javascripts to add breakpoints to."),(0,a.yg)("p",{parentName:"li"},(0,a.yg)("img",{alt:"React Dev Tools Source",src:o(27572).A,width:"936",height:"685"})," "),(0,a.yg)("p",{parentName:"li"},"If you right click on the redux devtools section you will get a popup to enable network calls. This will allow you to see the calls and response done to the api."),(0,a.yg)("p",{parentName:"li"},(0,a.yg)("img",{alt:"React Dev Tools Enable Network",src:o(99583).A,width:"1037",height:"545"})," "),(0,a.yg)("p",{parentName:"li"},(0,a.yg)("img",{alt:"React Dev Tools Network",src:o(13321).A,width:"973",height:"497"})," "))),(0,a.yg)("h3",{id:"vscode-react-native-tools-extension"},"VSCode React Native Tools Extension"),(0,a.yg)("p",null," This extension will allow you to add breakpoints on the actual code in VSCode."),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"If not installed install the React Native Tools extension in VSCode and follow the setup instructions in the extensions document."),(0,a.yg)("p",{parentName:"li"},(0,a.yg)("img",{alt:"React Tools VSCode",src:o(69537).A,width:"761",height:"242"})," ")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"After the extension is installed launch the debugger. Select the Run and Debug Icon on the left explorer and click the play button on the Attach tp packager dropdown."),(0,a.yg)("p",{parentName:"li"},(0,a.yg)("img",{alt:"Launch Debugger",src:o(51619).A,width:"392",height:"242"})," ")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Launch the debugger from your device."),(0,a.yg)("p",{parentName:"li"},"The debugger should attach to the VSCode debugger and stop on any breakpoints"),(0,a.yg)("p",{parentName:"li"},(0,a.yg)("img",{alt:"VSCode breakpoint",src:o(38255).A,width:"706",height:"487"})))))}c.isMDXComponent=!0},15561:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/android-debug-dialog-0b232400fca92aba85dfe96234776201.jpg"},4208:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/chrome-debug-screen-0007275fbc695f77e87d6bfa6b5cd445.png"},77691:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/chrome-dev-tools-console-8f6d577a4436f7363affdf6ee9e5a8df.png"},22820:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/chrome-dev-tools-element-5405dc5c743c7a7817890b1b79161467.png"},61817:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/chrome-dev-tools-source-95b94d89b81aaa617ced3efbdfba6a48.png"},28727:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/ios-debug-action-sheet-40fde13a7f681ed096be628dad4fef65.png"},99583:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/react-dev-tools-enable-network-e91d27fcacbc09156418cbd59031a2e2.png"},13321:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/react-dev-tools-network-b641a4c87a984c2f9d07963f977a245f.png"},27572:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/react-dev-tools-source-784275b853cb8b0f7ca096de61a09c67.png"},83716:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/react-dev-tools-08c62e4174dbae25bb4cdd8713f8878e.png"},38255:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/vscode-debugger-breakpoint-baeb8544624e79e49eeba2633eeca65a.png"},51619:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/vscode-launch-debugger-3013c3378edccb8d9baf53de7dab6595.png"},69537:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/vscode-react-tools-ext-d8a554f524ac4d4f0374288bf3170273.png"}}]);