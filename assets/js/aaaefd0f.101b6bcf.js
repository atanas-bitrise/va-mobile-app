"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2983],{32666:(e,t,n)=>{n.d(t,{Z:()=>p});var o=n(67294),r=n(97405),l=n(22808),i=n(30433),a=n(41284),s=n(36005);const m=e=>{let{props:t}=e;return t?o.createElement(o.Fragment,null,s.ZP.isEmpty(t)?o.createElement("pre",{className:"preText"},"This component does not have props defined"):o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",null,"Name"),o.createElement("th",null,"Type"),o.createElement("th",null,"Default Value"),o.createElement("th",null,"Required"),o.createElement("th",null,"Description"))),o.createElement("tbody",null,Object.keys(t).map((e=>o.createElement("tr",{key:e},o.createElement("td",null,o.createElement("code",null,e)),o.createElement("td",{style:{minWidth:200}},t[e].type?.name),o.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),o.createElement("td",null,t[e].required?"Yes":"No"),o.createElement("td",null,t[e].description))))))):null};function p(e){const t=(0,a.N)(e.componentName),{description:n,displayName:s,props:p}=t[0],c=`How to use the ${s} component`,d=`Full code for the ${s} component`;return o.createElement(o.Fragment,null,n,o.createElement("br",null),o.createElement("br",null),o.createElement(l.Z,null,o.createElement(i.Z,{value:"props",label:"Properties"},o.createElement(m,{props:p})),o.createElement(i.Z,{value:"example",label:"Example"},e.example&&o.createElement(r.Z,{title:c,className:"language-tsx test"},e.example)),o.createElement(i.Z,{value:"code",label:"Source Code"},e.codeString&&o.createElement(r.Z,{title:d,className:"language-tsx"},e.codeString)),o.createElement(i.Z,{value:"accessibility",label:"Accessibility"},o.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},41284:(e,t,n)=>{n.d(t,{N:()=>r});var o=n(52426);const r=e=>(0,o.ZP)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},73512:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>b,exampleString:()=>d,frontMatter:()=>a,metadata:()=>m,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));n(8209),n(97405);const l="import React, { FC, useEffect, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\n\nimport { Box, TextView } from 'components'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { VATextColors, VATypographyThemeVariants } from 'styles/theme'\nimport { getBuildNumber, getVersionName } from 'utils/deviceData'\nimport { useTheme } from 'utils/hooks'\n\nexport type AppVersionAndBuildProps = {\n  /** color of the text */\n  textColor?: keyof VATextColors\n  /** font weight of the text */\n  textWeight?: keyof VATypographyThemeVariants\n}\n\n/**\n * Common component to display the apps version and build number\n */\nconst AppVersionAndBuild: FC<AppVersionAndBuildProps> = ({ textColor = 'bodyText', textWeight = 'MobileBody' }) => {\n  const { t } = useTranslation(NAMESPACE.COMMON)\n  const theme = useTheme()\n  const [versionName, setVersionName] = useState<string>()\n  const [buildNumber, setBuildNumber] = useState<number>()\n\n  useEffect(() => {\n    async function getVersionAndBuild() {\n      const version = await getVersionName()\n      const build = await getBuildNumber()\n      setVersionName(version)\n      setBuildNumber(build)\n    }\n\n    getVersionAndBuild()\n  }, [])\n\n  return (\n    <Box mb={theme.dimensions.contentMarginBottom} justifyContent={'center'} alignItems={'center'}>\n      <TextView testID=\"AppVersionTestID\" variant={textWeight} flexDirection=\"row\" color={textColor}>\n        {t('versionAndBuild', { versionName, buildNumber })}\n      </TextView>\n    </Box>\n  )\n}\n\nexport default AppVersionAndBuild\n";var i=n(32666);const a={},s=void 0,m={unversionedId:"Flagship design library/Components/Uncategorized/AppVersionAndBuild",id:"Flagship design library/Components/Uncategorized/AppVersionAndBuild",title:"AppVersionAndBuild",description:"",source:"@site/docs/Flagship design library/Components/Uncategorized/AppVersionAndBuild.mdx",sourceDirName:"Flagship design library/Components/Uncategorized",slug:"/Flagship design library/Components/Uncategorized/AppVersionAndBuild",permalink:"/va-mobile-app/docs/Flagship design library/Components/Uncategorized/AppVersionAndBuild",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Uncategorized",permalink:"/va-mobile-app/docs/Flagship design library/Components/Uncategorized/"},next:{title:"NotificationManager",permalink:"/va-mobile-app/docs/Flagship design library/Components/Uncategorized/NotificationManager"}},p={},c=[],d="<AppVersionAndBuild textColor={'primaryContrast'} />",u={toc:c,exampleString:d},g="wrapper";function b(e){let{components:t,...n}=e;return(0,r.kt)(g,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(i.Z,{componentName:"AppVersionAndBuild",example:d,codeString:l,mdxType:"ComponentTopInfo"}))}b.isMDXComponent=!0}}]);