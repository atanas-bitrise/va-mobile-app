"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1741],{69930:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var i=n(58168),a=(n(96540),n(15680));n(41873);const o={title:"Content style guide",sidebar_position:1},r=void 0,s={unversionedId:"Flagship design library/Content/content-style-guide",id:"Flagship design library/Content/content-style-guide",title:"Content style guide",description:"Voice and tone",source:"@site/docs/Flagship design library/Content/content-style-guide.md",sourceDirName:"Flagship design library/Content",slug:"/Flagship design library/Content/content-style-guide",permalink:"/va-mobile-app/docs/Flagship design library/Content/content-style-guide",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Content style guide",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Rules for Determining UX Modality",permalink:"/va-mobile-app/docs/Contributing/DeterminingModality"},next:{title:"Color",permalink:"/va-mobile-app/docs/Flagship design library/Foundation/color"}},l={},c=[{value:"Voice and tone",id:"voice-and-tone",level:2},{value:"Accessible and inclusive language",id:"accessible-and-inclusive-language",level:2},{value:"Grammar",id:"grammar",level:2},{value:"Capitalization",id:"capitalization",level:3},{value:"Times and time zones",id:"times-and-time-zones",level:3},{value:"Word choice, spelling, and naming conventions",id:"word-choice-spelling-and-naming-conventions",level:2},{value:"Content briefs",id:"content-briefs",level:3},{value:"Word List",id:"word-list",level:3},{value:"Naming conventions",id:"naming-conventions",level:3},{value:"Error messages",id:"error-messages",level:2},{value:"New content",id:"new-content",level:2}],d={toc:c},g="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(g,(0,i.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"voice-and-tone"},"Voice and tone"),(0,a.yg)("p",null,"We follow the ",(0,a.yg)("a",{parentName:"p",href:"https://design.va.gov/content-style-guide/content-principles"},"VA design system content principles"),". In following these principles, we create consistent, clear, and user-centered content that is based on Veteran feedback. "),(0,a.yg)("p",null,"In addition, we follow ",(0,a.yg)("a",{parentName:"p",href:"https://design.va.gov/content-style-guide/plain-language/"},"VA plain language standards")," to help Veterans and their families find and understand the information they need."),(0,a.yg)("p",null,"Since we create content for health-related features, we also follow the ",(0,a.yg)("a",{parentName:"p",href:"https://design.va.gov/content-style-guide/health-content"},"VA content guidelines for health content"),"."),(0,a.yg)("h2",{id:"accessible-and-inclusive-language"},"Accessible and inclusive language"),(0,a.yg)("p",null,"We write for all Veterans and those who care for them. Therefore, we use people-first language that is inclusive of the wide range of abilities and experiences of our users.\nWe avoid words that are insensitive to the disabilities faced by our users. For example, we don\u2019t use \u201csee\u201d since a number of our users are blind or low-vision. We also avoid idioms, such as \u201cat your fingertips\u201d or \u201cgive an arm or a leg.\u201d Not only are idioms often insensitive to Veterans\u2019 experience, but also idioms don\u2019t follow plain language standards."),(0,a.yg)("p",null,"Resources to consider:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.gov.uk/government/publications/inclusive-communication/inclusive-language-words-to-use-and-avoid-when-writing-about-disability"},"Gov UK inclusive communications")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://beeckcenter.georgetown.edu/wp-content/uploads/2022/01/Accessible-Benefits-Information.pdf"},"Georgetown University best practices guide (pdf)")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/style-guide/a-z-word-list-term-collections/term-collections/accessibility-terms"},"Microsoft guideline"))),(0,a.yg)("h2",{id:"grammar"},"Grammar"),(0,a.yg)("p",null,"We follow ",(0,a.yg)("a",{parentName:"p",href:"https://design.va.gov/content-style-guide/"},"VA.gov content style guide rules")," regarding grammar with the following adjustments:"),(0,a.yg)("h3",{id:"capitalization"},"Capitalization"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"For native actions, we use title case for iOS and all caps for Android."),(0,a.yg)("li",{parentName:"ul"},"For interface buttons, we use sentence case.")),(0,a.yg)("h3",{id:"times-and-time-zones"},"Times and time zones"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Due to default formatting in React Native, when times/time zones aren't hardcoded, our formatting differs from VA.gov. For example, React Native formats as ",(0,a.yg)("inlineCode",{parentName:"li"},"AM")," and ",(0,a.yg)("inlineCode",{parentName:"li"},"PM")," (both letters capitalized and no punctuation) and ",(0,a.yg)("inlineCode",{parentName:"li"},"EST")," (three-letter format). "),(0,a.yg)("li",{parentName:"ul"},"When times and timezones are hardcoded, we follow the VA.gov content style guide.")),(0,a.yg)("h2",{id:"word-choice-spelling-and-naming-conventions"},"Word choice, spelling, and naming conventions"),(0,a.yg)("h3",{id:"content-briefs"},"Content briefs"),(0,a.yg)("p",null,"We use ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/department-of-veterans-affairs/va.gov-team/tree/master/products/content/content-briefs"},"content briefs")," to ensure consistent word choice and usage with other VA teams. VA.gov's content team creates content briefs, sometimes in collaboration with the VA Mobile App content designer."),(0,a.yg)("h3",{id:"word-list"},(0,a.yg)("a",{parentName:"h3",href:"https://design.va.gov/content-style-guide/word-list"},"Word List")),(0,a.yg)("p",null,"We use standard American English spelling in Merriam-Webster Dictionary. The words on the VA.gov word list are exceptions or need clarification."),(0,a.yg)("h3",{id:"naming-conventions"},(0,a.yg)("a",{parentName:"h3",href:"https://design.va.gov/content-style-guide/naming-and-labels"},"Naming conventions")),(0,a.yg)("p",null,"We follow VA.gov content style guide\u2019s ",(0,a.yg)("a",{parentName:"p",href:"https://design.va.gov/content-style-guide/naming-and-labels"},"rules for naming and labels")," for tools, products, benefits, offices, and programs.\nIn most cases, VA.gov will have already established a name for a tool, benefit, etc. For cases in which we'd like to suggest a different name or need help with naming an app-specific feature, we work closely with VA.gov's content team to ensure alignment."),(0,a.yg)("h2",{id:"error-messages"},"Error messages"),(0,a.yg)("p",null,"VA.gov\u2019s design system includes a section on ",(0,a.yg)("a",{parentName:"p",href:"https://design.va.gov/patterns/help-users-to/recover-from-errors"},"how to help users recover from errors"),". It details the structure, style, and tone for error and informational messages."),(0,a.yg)("p",null,"When writing an error message, we use clear, direct, and actionable language."),(0,a.yg)("p",null,"The VA.gov content style guide includes an ",(0,a.yg)("a",{parentName:"p",href:"https://design.va.gov/content-style-guide/error-messages/"},"error message dictionary/reference tool")," for different scenarios."),(0,a.yg)("h2",{id:"new-content"},"New content"),(0,a.yg)("p",null,"VA Mobile App team has a dedicated content designer. This person works with VA Sitewide Content team to implement their overall strategy and ensure alignment between the app and VA.gov. In some cases, the content design may request support from the Sitewide Content team by submitting an ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/department-of-veterans-affairs/va.gov-team/issues/new?assignees=Sitewide+Content%2C+RLHecht&labels=sitewide+content%2C+sitewide+content-product+support&template=sitewide-content-intake-form.md&title=%3CType+of+Request%3E+from+%3CTeam%3E"},"issue ticket on Github"),"."))}u.isMDXComponent=!0},15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>m});var i=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),g=c(n),p=a,m=g["".concat(l,".").concat(p)]||g[p]||u[p]||o;return n?i.createElement(m,r(r({ref:t},d),{},{components:n})):i.createElement(m,r({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[g]="string"==typeof e?e:a,r[1]=s;for(var c=2;c<o;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},41873:(e,t,n)=>{n(96540)}}]);