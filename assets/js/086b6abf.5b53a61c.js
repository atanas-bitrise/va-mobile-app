"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9404],{85132:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>o});var a=s(58168),d=(s(96540),s(15680));s(41873);const t={title:"Address Update Flow"},r=void 0,i={unversionedId:"Engineering/BackEnd/Architecture/AddressUpdateFlow",id:"Engineering/BackEnd/Architecture/AddressUpdateFlow",title:"Address Update Flow",description:"Updating an address is a two step process with different option for what to send in the request body.Below are three scenarios for updating when the user has entered a valid address with a single match.A valid address with multiple suggested address matches. And when a user has entered what the validation service considers and invalid addres but the user would like to override that and use it anyway.",source:"@site/docs/Engineering/BackEnd/Architecture/AddressUpdateFlow.md",sourceDirName:"Engineering/BackEnd/Architecture",slug:"/Engineering/BackEnd/Architecture/AddressUpdateFlow",permalink:"/va-mobile-app/docs/Engineering/BackEnd/Architecture/AddressUpdateFlow",draft:!1,tags:[],version:"current",frontMatter:{title:"Address Update Flow"},sidebar:"tutorialSidebar",previous:{title:"API",permalink:"/va-mobile-app/docs/Engineering/BackEnd/API/"},next:{title:"Authentication Diagrams",permalink:"/va-mobile-app/docs/Engineering/BackEnd/Architecture/Auth Diagrams"}},l={},o=[{value:"Single match valid address",id:"single-match-valid-address",level:2},{value:"Validate Address Request",id:"validate-address-request",level:3},{value:"Validate Address Response",id:"validate-address-response",level:3},{value:"User Address Request",id:"user-address-request",level:3},{value:"Addresses Response",id:"addresses-response",level:4},{value:"Multiple match addresses",id:"multiple-match-addresses",level:2},{value:"Multiple Addresses Request",id:"multiple-addresses-request",level:3},{value:"Multiple Addresses Response",id:"multiple-addresses-response",level:3},{value:"Multiple Addresses Request 2",id:"multiple-addresses-request-2",level:3},{value:"Multiple Addresses Response 2",id:"multiple-addresses-response-2",level:3},{value:"Overridding and &#39;invalid&#39; address",id:"overridding-and-invalid-address",level:2},{value:"Invalid Address Request",id:"invalid-address-request",level:3},{value:"Invalid Address Response",id:"invalid-address-response",level:3},{value:"User Addresses Request",id:"user-addresses-request",level:3},{value:"User Addresses Response",id:"user-addresses-response",level:3}],u={toc:o},c="wrapper";function p(e){let{components:n,...s}=e;return(0,d.yg)(c,(0,a.A)({},u,s,{components:n,mdxType:"MDXLayout"}),(0,d.yg)("p",null,"Updating an address is a two step process with different option for what to send in the request body.Below are three scenarios for updating when the user has entered a valid address with a single match.A valid address with multiple suggested address matches. And when a user has entered what the validation service considers and invalid addres but the user would like to override that and use it anyway."),(0,d.yg)("h2",{id:"single-match-valid-address"},"Single match valid address"),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-rst"},"POST /v0/user/addresses/validate\n")),(0,d.yg)("h3",{id:"validate-address-request"},"Validate Address Request"),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "addressLine1": "51 W Weber Rd",\n  "addressType": "DOMESTIC",\n  "city": "Columbus",\n  "countryName": "United States",\n  "countryCodeIso3": "USA",\n  "stateCode": "OH",\n  "zipCode": "43202",\n  "type": "DOMESTIC",\n  "addressPou": "CORRESPONDENCE"\n}\n')),(0,d.yg)("h3",{id:"validate-address-response"},"Validate Address Response"),(0,d.yg)("p",null,"The address has a 100% confidence score. The address that's returned can be sent in a new/update request. In this case the address object in the meta data should be passed along in that request."),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "id": "a3add173-380c-4387-9d72-276b755aa980",\n      "type": "suggested_address",\n      "attributes": {\n        "addressLine1": "51 W Weber Rd",\n        "addressLine2": null,\n        "addressLine3": null,\n        "addressPou": "CORRESPONDENCE",\n        "addressType": "DOMESTIC",\n        "city": "Columbus",\n        "countryCodeIso3": "USA",\n        "internationalPostalCode": null,\n        "province": null,\n        "stateCode": "OH",\n        "zipCode": "43202",\n        "zipCodeSuffix": "1922"\n      },\n      "meta": {\n        "address": {\n          "confidenceScore": 100.0,\n          "addressType": "Domestic",\n          "deliveryPointValidation": "CONFIRMED",\n          "residentialDeliveryIndicator": "RESIDENTIAL"\n        },\n        "validationKey": -1398777841\n      }\n    }\n  ]\n}\n')),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-rst"},"PUT /v0/user/addresses\n")),(0,d.yg)("h3",{id:"user-address-request"},"User Address Request"),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "addressMetaData": {\n    "confidenceScore": 100.0,\n    "addressType": "Domestic",\n    "deliveryPointValidation": "CONFIRMED",\n    "residentialDeliveryIndicator": "RESIDENTIAL"\n  },\n  "addressLine1": "51 W Weber Rd",\n  "addressType": "DOMESTIC",\n  "city": "Columbus",\n  "countryName": "United States",\n  "countryCodeIso3": "USA",\n  "stateCode": "OH",\n  "zipCode": "43202",\n  "addressPou": "CORRESPONDENCE",\n  "id": 181513\n}\n')),(0,d.yg)("h4",{id:"addresses-response"},"Addresses Response"),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "id": "b2e51260-00c9-4db6-80f6-b6c7541a9e54",\n    "type": "async_transaction_vet360_address_transactions",\n    "attributes": {\n      "transactionId": "b2e51260-00c9-4db6-80f6-b6c7541a9e54",\n      "transactionStatus": "COMPLETED_SUCCESS",\n      "type": "AsyncTransaction::Vet360::AddressTransaction",\n      "metadata": []\n    }\n  }\n}\n')),(0,d.yg)("h2",{id:"multiple-match-addresses"},"Multiple match addresses"),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-rst"},"POST /v0/user/addresses/validate\n")),(0,d.yg)("h3",{id:"multiple-addresses-request"},"Multiple Addresses Request"),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "addressLine1": "37 1st st",\n  "addressType": "DOMESTIC",\n  "city": "Brooklyn",\n  "countryName": "United States",\n  "countryCodeIso3": "USA",\n  "stateCode": "NY",\n  "zipCode": "11249",\n  "type": "DOMESTIC",\n  "addressPou": "CORRESPONDENCE",\n}\n')),(0,d.yg)("h3",{id:"multiple-addresses-response"},"Multiple Addresses Response"),(0,d.yg)("p",null,"In this case two address matches are returned and should be displayed to the user so they can pick which they'd like to use. As above the ",(0,d.yg)("inlineCode",{parentName:"p"},"meta.address")," object is passed along in the new/update request."),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "id": "56c30b81-9162-4f64-86ce-e7eaa3ae0327",\n      "type": "suggested_address",\n      "attributes": {\n        "addressLine1": "37 N 1st St",\n        "addressLine2": null,\n        "addressLine3": null,\n        "addressPou": "CORRESPONDENCE",\n        "addressType": "DOMESTIC",\n        "city": "Brooklyn",\n        "countryCodeIso3": "USA",\n        "internationalPostalCode": null,\n        "province": null,\n        "stateCode": "NY",\n        "zipCode": "11249",\n        "zipCodeSuffix": "3939"\n      },\n      "meta": {\n        "address": {\n          "confidenceScore": 100.0,\n          "addressType": "Domestic",\n          "deliveryPointValidation": "UNDELIVERABLE"\n        },\n        "validationKey": -73046298\n      }\n    },\n    {\n      "id": "671e752c-3292-4a2b-8747-d42b2bd56055",\n      "type": "suggested_address",\n      "attributes": {\n        "addressLine1": "37 S 1st St",\n        "addressLine2": null,\n        "addressLine3": null,\n        "addressPou": "CORRESPONDENCE",\n        "addressType": "DOMESTIC",\n        "city": "Brooklyn",\n        "countryCodeIso3": "USA",\n        "internationalPostalCode": null,\n        "province": null,\n        "stateCode": "NY",\n        "zipCode": "11249",\n        "zipCodeSuffix": "4101"\n      },\n      "meta": {\n        "address": {\n          "confidenceScore": 100.0,\n          "addressType": "Domestic",\n          "deliveryPointValidation": "CONFIRMED",\n          "residentialDeliveryIndicator": "MIXED"\n        },\n        "validationKey": -73046298\n      }\n    }\n  ]\n}\n')),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-rst"},"PUT /v0/user/addresses\n")),(0,d.yg)("h3",{id:"multiple-addresses-request-2"},"Multiple Addresses Request 2"),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "addressMetaData": {\n    "confidenceScore": 100.0,\n    "addressType": "Domestic",\n    "deliveryPointValidation": "CONFIRMED",\n    "residentialDeliveryIndicator": "MIXED"\n  },\n  "addressLine1": "37 S 1st St",\n  "addressPou": "CORRESPONDENCE",\n  "addressType": "DOMESTIC",\n  "city": "Brooklyn",\n  "countryCodeIso3": "USA",\n  "stateCode": "NY",\n  "zipCode": "11249",\n  "zipCodeSuffix": "4101",\n  "id": 181513\n}\n')),(0,d.yg)("h3",{id:"multiple-addresses-response-2"},"Multiple Addresses Response 2"),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "id": "b2e51260-00c9-4db6-80f6-b6c7541a9e54b2e51260-00c9-4db6-80f6-b6c7541a9e54",\n    "type": "async_transaction_vet360_address_transactions",\n    "attributes": {\n      "transactionId": "b2e51260-00c9-4db6-80f6-b6c7541a9e54",\n      "transactionStatus": "COMPLETED_SUCCESS",\n      "type": "AsyncTransaction::Vet360::AddressTransaction",\n      "metadata": []\n    }\n  }\n}\n')),(0,d.yg)("h2",{id:"overridding-and-invalid-address"},"Overridding and 'invalid' address"),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-rst"},"POST /v0/user/addresses/validate\n")),(0,d.yg)("h3",{id:"invalid-address-request"},"Invalid Address Request"),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "addressLine1": "4200 Weasel Rd",\n  "addressType": "DOMESTIC",\n  "city": "Columbus",\n  "countryName": "United States",\n  "countryCodeIso3": "USA",\n  "stateCode": "OH",\n  "zipCode": "43202",\n  "type": "DOMESTIC",\n  "addressPou": "CORRESPONDENCE"\n}\n')),(0,d.yg)("h3",{id:"invalid-address-response"},"Invalid Address Response"),(0,d.yg)("p",null,"This response comes back with a 0% confidence score. We can let the user override the validation by passing back the ",(0,d.yg)("inlineCode",{parentName:"p"},"meta.validationKey")," in the new/update request."),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "id": "6ba2f94b-c143-40da-8c5d-a76a637945b5",\n      "type": "suggested_address",\n      "attributes": {\n        "addressLine1": "4200 Weasel Rd",\n        "addressLine2": null,\n        "addressLine3": null,\n        "addressPou": "CORRESPONDENCE",\n        "addressType": "DOMESTIC",\n        "city": "Columbus",\n        "countryCodeIso3": "USA",\n        "internationalPostalCode": null,\n        "province": null,\n        "stateCode": "OH",\n        "zipCode": "43202",\n        "zipCodeSuffix": null\n      },\n      "meta": {\n        "address": {\n          "confidenceScore": 0.0,\n          "addressType": "Domestic",\n          "deliveryPointValidation": "MISSING_ZIP"\n        },\n        "validationKey": 377261722\n      }\n    }\n  ]\n}\n')),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-rst"},"PUT /v0/user/addresses\n")),(0,d.yg)("h3",{id:"user-addresses-request"},"User Addresses Request"),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "validationKey": 377261722,\n  "addressLine1": "4200 Weasel Rd",\n  "addressType": "DOMESTIC",\n  "city": "Columbus",\n  "countryName": "United States",\n  "countryCodeIso3": "USA",\n  "stateCode": "OH",\n  "zipCode": "43202",\n  "type": "DOMESTIC",\n  "addressPou": "CORRESPONDENCE",\n  "id": 181513\n}\n')),(0,d.yg)("h3",{id:"user-addresses-response"},"User Addresses Response"),(0,d.yg)("pre",null,(0,d.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "id": "b2e51260-00c9-4db6-80f6-b6c7541a9e54",\n    "type": "async_transaction_vet360_address_transactions",\n    "attributes": {\n      "transactionId": "b2e51260-00c9-4db6-80f6-b6c7541a9e54",\n      "transactionStatus": "COMPLETED_SUCCESS",\n      "type": "AsyncTransaction::Vet360::AddressTransaction",\n      "metadata": []\n    }\n  }\n}\n')))}p.isMDXComponent=!0},15680:(e,n,s)=>{s.d(n,{xA:()=>u,yg:()=>g});var a=s(96540);function d(e,n,s){return n in e?Object.defineProperty(e,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[n]=s,e}function t(e,n){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),s.push.apply(s,a)}return s}function r(e){for(var n=1;n<arguments.length;n++){var s=null!=arguments[n]?arguments[n]:{};n%2?t(Object(s),!0).forEach((function(n){d(e,n,s[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):t(Object(s)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(s,n))}))}return e}function i(e,n){if(null==e)return{};var s,a,d=function(e,n){if(null==e)return{};var s,a,d={},t=Object.keys(e);for(a=0;a<t.length;a++)s=t[a],n.indexOf(s)>=0||(d[s]=e[s]);return d}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(a=0;a<t.length;a++)s=t[a],n.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(d[s]=e[s])}return d}var l=a.createContext({}),o=function(e){var n=a.useContext(l),s=n;return e&&(s="function"==typeof e?e(n):r(r({},n),e)),s},u=function(e){var n=o(e.components);return a.createElement(l.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},y=a.forwardRef((function(e,n){var s=e.components,d=e.mdxType,t=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=o(s),y=d,g=c["".concat(l,".").concat(y)]||c[y]||p[y]||t;return s?a.createElement(g,r(r({ref:n},u),{},{components:s})):a.createElement(g,r({ref:n},u))}));function g(e,n){var s=arguments,d=n&&n.mdxType;if("string"==typeof e||d){var t=s.length,r=new Array(t);r[0]=y;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[c]="string"==typeof e?e:d,r[1]=i;for(var o=2;o<t;o++)r[o]=s[o];return a.createElement.apply(null,r)}return a.createElement.apply(null,s)}y.displayName="MDXCreateElement"},41873:(e,n,s)=>{s(96540)}}]);