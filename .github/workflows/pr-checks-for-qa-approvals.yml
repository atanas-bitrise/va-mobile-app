
#
# Checks if QA approvals are necessary, and if so runs the associated action when a new review is added
#

name: '[Utils] QA required approval'

on:
  pull_request:
    types: [opened, edited, converted_to_draft, ready_for_review, reopened]
    paths:
      - 'VAMobile/src/**'
      - 'VAMobile/package.json'
      - '!VAMobile/src/**.test.*'
  pull_request_review:
    types: [submitted, dismissed]
  pull_request_target:
    branches:
      - 'develop'
  push: 
    branches: 
      - 'chanel-6261-qa-approval-workflow'     
jobs:
  check_for_qa_approval:
    name: Requires QA approval
    runs-on: ubuntu-latest
    steps:
      - name: Check QA approval
        
        shell: bash
        run: |
          approvals=$(curl --request GET \
          --url https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews?per_page=100 \
          --header 'Authorization: ${{ secrets.GITHUB_TOKEN }}' \
          --header 'Content-Type: application/json' |
          jq -c '[map(select(.state == "APPROVED")) | .[] .user.login]')

          if [[ $(jq 'length' <<< "$approvals") -eq 0 ]]; then
              echo 'No reviews found for this pull request.'
              exit 1
          fi

          echo "${{secrets.GH_ACTIONS_PAT}}" >> token.txt
          gh auth login --with-token < token.txt
          required_approval_count=$(gh api \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/department-of-veterans-affairs/va-mobile-app/branches/develop/protection |
          jq -c '.required_pull_request_reviews.required_approving_review_count')
          echo "Approvers: $approvals"  
          
          echo "required approval count: $required_approval_count"
 
          if [[ $(jq '. | length' <<< "$approvals") -gt $required_approval_count ]]
            then
              if [[ $(jq '[.[] | select(. | IN("timwright12", "alexandec", "theodur", "dumathane", "cadibemma", "sparowhawk"))] | length' <<< "$approvals") -gt 0 ]]
                then
                echo 'This PR has at least one engineer approval. Now checking for QA approval...'
                exit 0
              else 
                echo 'This PR requires Engineer approval before qa review'
                exit 1
              fi
          else
            echo 'This PR requires at least one engineer approval before QA review.'
            exit 1
          fi 

          if [[ $(jq '. | length' <<< "$approvals") -gt $required_approval_count ]]
            then
              if [[ $(jq '[.[] | select(. | IN("timwright12", "rbontrager", "DJUltraTom", "TKDickson"))] | length' <<< "$approvals") -gt 0 ]]
                then
                echo 'This PR has QA and engineer approval to merge'
                exit 0
              else 
                echo 'This PR requires QA approval to merge'
                exit 1
              fi
          else
            echo 'This PR requires 2 approvals, including one QA approval, before merging.'
            exit 1
          fi 