"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8037],{32666:(e,t,n)=>{n.d(t,{Z:()=>c});var i=n(67294),a=n(97405),s=n(22808),o=n(30433),l=n(41284),r=n(36005);const u=e=>{let{props:t}=e;return t?i.createElement(i.Fragment,null,r.ZP.isEmpty(t)?i.createElement("pre",{className:"preText"},"This component does not have props defined"):i.createElement("table",null,i.createElement("thead",null,i.createElement("tr",null,i.createElement("th",null,"Name"),i.createElement("th",null,"Type"),i.createElement("th",null,"Default Value"),i.createElement("th",null,"Required"),i.createElement("th",null,"Description"))),i.createElement("tbody",null,Object.keys(t).map((e=>i.createElement("tr",{key:e},i.createElement("td",null,i.createElement("code",null,e)),i.createElement("td",{style:{minWidth:200}},t[e].type?.name),i.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),i.createElement("td",null,t[e].required?"Yes":"No"),i.createElement("td",null,t[e].description))))))):null};function c(e){const t=(0,l.N)(e.componentName),{description:n,displayName:r,props:c}=t[0],m=`How to use the ${r} component`,p=`Full code for the ${r} component`;return i.createElement(i.Fragment,null,n,i.createElement("br",null),i.createElement("br",null),i.createElement(s.Z,null,i.createElement(o.Z,{value:"props",label:"Properties"},i.createElement(u,{props:c})),i.createElement(o.Z,{value:"example",label:"Example"},e.example&&i.createElement(a.Z,{title:m,className:"language-tsx test"},e.example)),i.createElement(o.Z,{value:"code",label:"Source Code"},e.codeString&&i.createElement(a.Z,{title:p,className:"language-tsx"},e.codeString)),i.createElement(o.Z,{value:"accessibility",label:"Accessibility"},i.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},41284:(e,t,n)=>{n.d(t,{N:()=>a});var i=n(52426);const a=e=>(0,i.ZP)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},92236:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>b,exampleString:()=>p,frontMatter:()=>l,metadata:()=>u,toc:()=>m});var i=n(87462),a=(n(67294),n(3905));n(8209),n(97405);const s="import React, { FC } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { TouchableWithoutFeedback, TouchableWithoutFeedbackProps } from 'react-native'\n\nimport { Box, BoxProps, TextView } from 'components/index'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { useRouteNavigation, useTheme } from 'utils/hooks'\n\n/**\n * Crisis Line Button component\n */\nconst CrisisLineButton: FC = () => {\n  const { t } = useTranslation(NAMESPACE.COMMON)\n  const theme = useTheme()\n  const navigateTo = useRouteNavigation()\n\n  const touchableProps: TouchableWithoutFeedbackProps = {\n    accessible: true,\n    accessibilityRole: 'link',\n  }\n\n  const boxProps: BoxProps = {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    backgroundColor: 'ctaButton',\n    minHeight: theme.dimensions.touchableMinHeight,\n    mx: theme.dimensions.gutter,\n    my: theme.dimensions.standardMarginBetween,\n    py: theme.dimensions.headerLeftButtonFromTextPadding,\n    px: theme.dimensions.cardPadding,\n    borderRadius: 40,\n  }\n\n  return (\n    <TouchableWithoutFeedback onPress={() => navigateTo('VeteransCrisisLine')} {...touchableProps}>\n      <Box {...boxProps}>\n        <TextView variant={'CrisisLineButton'}>{t('crisisLineButton.label')}</TextView>\n      </Box>\n    </TouchableWithoutFeedback>\n  )\n}\n\nexport default CrisisLineButton\n";var o=n(32666);const l={title:"Crisis Line button"},r=void 0,u={unversionedId:"Flagship design library/Components/Buttons and Links/CrisisLineButton",id:"Flagship design library/Components/Buttons and Links/CrisisLineButton",title:"Crisis Line button",description:"The Crisis Line button provides users quick access to crisis care.",source:"@site/docs/Flagship design library/Components/Buttons and Links/CrisisLineButton.mdx",sourceDirName:"Flagship design library/Components/Buttons and Links",slug:"/Flagship design library/Components/Buttons and Links/CrisisLineButton",permalink:"/va-mobile-app/docs/Flagship design library/Components/Buttons and Links/CrisisLineButton",draft:!1,tags:[],version:"current",frontMatter:{title:"Crisis Line button"},sidebar:"tutorialSidebar",previous:{title:"BackButton",permalink:"/va-mobile-app/docs/Flagship design library/Components/Buttons and Links/BackButton"},next:{title:"Menus",permalink:"/va-mobile-app/docs/Flagship design library/Components/Buttons and Links/Menus"}},c={},m=[{value:"Usage",id:"usage",level:2},{value:"When to use Crisis Line button",id:"when-to-use-crisis-line-button",level:3},{value:"Behavior",id:"behavior",level:3},{value:"Placement",id:"placement",level:3},{value:"Code usage",id:"code-usage",level:2}],p=" <CrisisLineButton />",d={toc:m,exampleString:p},h="wrapper";function b(e){let{components:t,...n}=e;return(0,a.kt)(h,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The Crisis Line button provides users quick access to crisis care."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"when-to-use-crisis-line-button"},"When to use Crisis Line button"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Crisis Line button button currently displays on the following screens:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Login"),(0,a.kt)("li",{parentName:"ul"},"Home"),(0,a.kt)("li",{parentName:"ul"},"Contact VA"),(0,a.kt)("li",{parentName:"ul"},"Category screens, including Benefits, Health, and Payments"))),(0,a.kt)("li",{parentName:"ul"},"We don't include it on all screens to prevent banner fatigue / semantic satiation."),(0,a.kt)("li",{parentName:"ul"},"It should be considered on screens where there is a likelihood the Veteran is there because they're in crisis."),(0,a.kt)("li",{parentName:"ul"},"If the button is the only number on the page, it's possible it will be used as a general call center line.")),(0,a.kt)("h3",{id:"behavior"},"Behavior"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"When the component is tapped, it opens a full panel with more information.")),(0,a.kt)("h3",{id:"placement"},"Placement"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Component should appear near the top of the screen, directly below the top navigation bar.")),(0,a.kt)("h2",{id:"code-usage"},"Code usage"),(0,a.kt)(o.Z,{componentName:"CrisisLineButton",example:p,codeString:s,mdxType:"ComponentTopInfo"}))}b.isMDXComponent=!0}}]);