name: '[Build] test'

on:
  push:
    branches:
        - chanel-6812-automate-notification-release-ticket-to-ssigned-people

jobs:
  start_slack_thread:
    name: Start Slack thread
    runs-on: ubuntu-latest
    steps:
      - name: Start Slack thread
        env:
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
        run: |
          thread_ts=$(curl -X POST \
            -H 'Authorization: Bearer '"$SLACK_API_TOKEN" \
            -H 'Content-type: application/json' \
            -d '{
              "channel": "va-mobile-sandbox",
              "text": "On demand build started by ${{ github.actor }}: \"${{ github.event.inputs.notes }}\"  (:git: `${{ github.ref_name }}`). This process may take a while. See :thread: or <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|workflow run> for results."
            }' \
            https://slack.com/api/chat.postMessage | jq -r '.ts')

          echo "thread_ts=$thread_ts" >> $GITHUB_ENV
  release_coordination:
    name: release coordination
    needs: [start_slack_thread]
    runs-on: ubuntu-latest
    steps:
      - name: Map GitHub usernames to Slack IDs
        id: map_slack_ids
        run: |
          echo "GITHUB_TO_SLACK_MAP=$(jq -n \
          '{
            \"DJUltraTom\": \"@tom.gammons\",
            \"kellylein\": \"@kelly\",
            \"dumathane\": \"@Jon\",
            \"timwright12\": \"@Tim Wright\",
            \"ala-yna\": \"@alayna\",
            \"ajsarkar28\": \"@Ameet Sarkar\",
            \"rachelhanster\": \"@Rachel Han\",
            \"DonMcCaugheyUSDS\": \"@Don McCaughey \",
            \"IsraelleHub\": \"@charnelle.domguia\",
            \"rtwell\": \"@rtwell\"
            }')" >> $GITHUB_ENV
      - name: Notify Slack for release coordination
        env:
          SLACK_API_TOKEN: ${{ secrets.SLACK_API_TOKEN }}
        run: |
          curl -X POST \
               -H 'Authorization: Bearer '"$SLACK_API_TOKEN" \
               -H 'Content-type: application/json' \
               -d '{
                  "channel": "va-mobile-sandbox",
                  "text": "*Release ${{ needs.release_ticket.outputs.versionNumber }} Coordination thread:*\n*Release Ticket:* ${{ needs.release_ticket.outputs.ticketNumber }}\n*Release Report:* Github Report Link to be provided\n*Release Date:* ${{ needs.release_ticket.outputs.releaseDate }}\n\n*Approval Timing:*\n- *QA Approval Due:* ${{ needs.release_ticket.outputs.qaDueDate }}\n- *Product Approval Due:* ${{ needs.release_ticket.outputs.prodDueDate }}\n- *VA Approval Due:* ${{ needs.release_ticket.outputs.vaDueDate }}\n- Tickets Tagged Appropriately: ...\n\n*Contacts:*\n- *Release Testing:* ${{ fromJson(steps.map_slack_ids.outputs.GITHUB_TO_SLACK_MAP).IsraelleHub}}\n- *QART Tech Lead:* ${{ fromJson(steps.map_slack_ids.outputs.GITHUB_TO_SLACK_MAP).IsraelleHub}}n- *Engineering:* ${{ fromJson(steps.map_slack_ids.outputs.GITHUB_TO_SLACK_MAP).IsraelleHub}}, ${{ fromJson(steps.map_slack_ids.outputs.GITHUB_TO_SLACK_MAP).IsraelleHub}}\n- *Mobile Product Approvers:* H&B and Global - @${{ fromJson(steps.map_slack_ids.outputs.GITHUB_TO_SLACK_MAP).IsraelleHub}} Global - ${{ fromJson(steps.map_slack_ids.outputs.GITHUB_TO_SLACK_MAP).IsraelleHub}}\n- *VA PO for awareness:* ${{ fromJson(steps.map_slack_ids.outputs.GITHUB_TO_SLACK_MAP).IsraelleHub}}CC: ${{ fromJson(steps.map_slack_ids.outputs.GITHUB_TO_SLACK_MAP).IsraelleHub}}, ${{ fromJson(steps.map_slack_ids.outputs.GITHUB_TO_SLACK_MAP).IsraelleHub}}.",
                  "thread_ts": "'"${{ env.thread_ts }}"'"
                }' \
             https://slack.com/api/chat.postMessage
