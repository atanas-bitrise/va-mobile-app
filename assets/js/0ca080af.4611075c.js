"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1668],{32666:(e,t,n)=>{n.d(t,{Z:()=>p});var l=n(67294),o=n(97405),a=n(22808),r=n(30433),s=n(41284),i=n(36005);const c=e=>{let{props:t}=e;return t?l.createElement(l.Fragment,null,i.ZP.isEmpty(t)?l.createElement("pre",{className:"preText"},"This component does not have props defined"):l.createElement("table",null,l.createElement("thead",null,l.createElement("tr",null,l.createElement("th",null,"Name"),l.createElement("th",null,"Type"),l.createElement("th",null,"Default Value"),l.createElement("th",null,"Required"),l.createElement("th",null,"Description"))),l.createElement("tbody",null,Object.keys(t).map((e=>l.createElement("tr",{key:e},l.createElement("td",null,l.createElement("code",null,e)),l.createElement("td",{style:{minWidth:200}},t[e].type?.name),l.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),l.createElement("td",null,t[e].required?"Yes":"No"),l.createElement("td",null,t[e].description))))))):null};function p(e){const t=(0,s.N)(e.componentName),{description:n,displayName:i,props:p}=t[0],m=`How to use the ${i} component`,u=`Full code for the ${i} component`;return l.createElement(l.Fragment,null,n,l.createElement("br",null),l.createElement("br",null),l.createElement(a.Z,null,l.createElement(r.Z,{value:"props",label:"Properties"},l.createElement(c,{props:p})),l.createElement(r.Z,{value:"example",label:"Example"},e.example&&l.createElement(o.Z,{title:m,className:"language-tsx test"},e.example)),l.createElement(r.Z,{value:"code",label:"Source Code"},e.codeString&&l.createElement(o.Z,{title:u,className:"language-tsx"},e.codeString)),l.createElement(r.Z,{value:"accessibility",label:"Accessibility"},l.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},41284:(e,t,n)=>{n.d(t,{N:()=>o});var l=n(52426);const o=e=>(0,l.ZP)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},17803:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>y,exampleString:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>m});var l=n(87462),o=(n(67294),n(3905));n(8209),n(97405);const a="import React, { FC } from 'react'\nimport { AccessibilityProps, Switch as RNSwitch } from 'react-native'\n\nimport styled from 'styled-components'\n\nimport { a11yHintProp } from 'utils/accessibility'\nimport { useTheme } from 'utils/hooks'\n\nconst StyledRNSwitch = styled(RNSwitch)`\n  shadow-opacity: 0.3;\n  shadow-radius: 1px;\n  shadow-offset: 0px 0.5px;\n  min-width: 51px;\n`\n/**\n * Signifies props passed into {@link Switch}\n */\nexport type SwitchProps = AccessibilityProps & {\n  /** callback called on value change of the switch */\n  onPress: (value: boolean) => void\n  /** optional value of switch, updated with onPress */\n  on?: boolean\n  /** optional testID of switch */\n  testID?: string\n  /** optional accessibilityHint */\n  a11yHint?: string\n}\n\n/**A common component for the react native switch component*/\nconst Switch: FC<SwitchProps> = (props) => {\n  const { onPress, on, testID, a11yHint } = props\n  const theme = useTheme()\n  return (\n    <StyledRNSwitch\n      trackColor={{ false: theme.colors.control.switchOffTrack, true: theme.colors.control.switchOnTrack }}\n      thumbColor={theme.colors.control.switchOnThumb}\n      onValueChange={onPress}\n      value={!!on}\n      testID={testID}\n      {...a11yHintProp(a11yHint || '')}\n    />\n  )\n}\n\nexport default Switch\n";var r=n(32666);const s={},i=void 0,c={unversionedId:"Flagship design library/Components/Selection and Input/Form Elements/Switch",id:"Flagship design library/Components/Selection and Input/Form Elements/Switch",title:"Switch",description:"",source:"@site/docs/Flagship design library/Components/Selection and Input/Form Elements/Switch.mdx",sourceDirName:"Flagship design library/Components/Selection and Input/Form Elements",slug:"/Flagship design library/Components/Selection and Input/Form Elements/Switch",permalink:"/va-mobile-app/docs/Flagship design library/Components/Selection and Input/Form Elements/Switch",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"RadioGroup",permalink:"/va-mobile-app/docs/Flagship design library/Components/Selection and Input/Form Elements/RadioGroup"},next:{title:"VASelector",permalink:"/va-mobile-app/docs/Flagship design library/Components/Selection and Input/Form Elements/VASelector"}},p={},m=[],u="<Switch onPress={() => { console.log('update on press') }} on={false} />",d={toc:m,exampleString:u},h="wrapper";function y(e){let{components:t,...n}=e;return(0,o.kt)(h,(0,l.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(r.Z,{componentName:"Switch",example:u,codeString:a,mdxType:"ComponentTopInfo"}))}y.isMDXComponent=!0}}]);