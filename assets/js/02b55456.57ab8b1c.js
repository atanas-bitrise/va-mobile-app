"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6168],{32666:(e,t,n)=>{n.d(t,{Z:()=>m});var o=n(67294),i=n(97405),r=n(22808),l=n(30433),a=n(41284),s=n(36005);const c=e=>{let{props:t}=e;return t?o.createElement(o.Fragment,null,s.ZP.isEmpty(t)?o.createElement("pre",{className:"preText"},"This component does not have props defined"):o.createElement("table",null,o.createElement("thead",null,o.createElement("tr",null,o.createElement("th",null,"Name"),o.createElement("th",null,"Type"),o.createElement("th",null,"Default Value"),o.createElement("th",null,"Required"),o.createElement("th",null,"Description"))),o.createElement("tbody",null,Object.keys(t).map((e=>o.createElement("tr",{key:e},o.createElement("td",null,o.createElement("code",null,e)),o.createElement("td",{style:{minWidth:200}},t[e].type?.name),o.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),o.createElement("td",null,t[e].required?"Yes":"No"),o.createElement("td",null,t[e].description))))))):null};function m(e){const t=(0,a.N)(e.componentName),{description:n,displayName:s,props:m}=t[0],p=`How to use the ${s} component`,u=`Full code for the ${s} component`;return o.createElement(o.Fragment,null,n,o.createElement("br",null),o.createElement("br",null),o.createElement(r.Z,null,o.createElement(l.Z,{value:"props",label:"Properties"},o.createElement(c,{props:m})),o.createElement(l.Z,{value:"example",label:"Example"},e.example&&o.createElement(i.Z,{title:p,className:"language-tsx test"},e.example)),o.createElement(l.Z,{value:"code",label:"Source Code"},e.codeString&&o.createElement(i.Z,{title:u,className:"language-tsx"},e.codeString)),o.createElement(l.Z,{value:"accessibility",label:"Accessibility"},o.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},41284:(e,t,n)=>{n.d(t,{N:()=>i});var o=n(52426);const i=e=>(0,o.ZP)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},99466:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>h,exampleString:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var o=n(87462),i=(n(67294),n(3905));n(8209),n(97405);const r="import React, { FC } from 'react'\n\nimport { useTheme } from 'utils/hooks'\n\nimport Box from './Box'\nimport TextView from './TextView'\nimport VAIcon, { VAIconProps } from './VAIcon'\nimport { TextLine } from './types'\n\nexport type TextLineWithIconProps = {\n  /** Props for icon you want to display in this line of text */\n  iconProps?: VAIconProps & {\n    /** If the icon is supposed to appear on its own line (ex: read tag) */\n    isOwnLine?: boolean\n  }\n} & TextLine\n\n/**Common component to show an icon with a line of text*/\nexport const TextLineWithIcon: FC<TextLineWithIconProps> = ({ iconProps, text, variant, textAlign, color }) => {\n  const themes = useTheme()\n  const iconNotOwnRow = !(iconProps && iconProps.isOwnLine)\n\n  return (\n    <Box flexDirection={'row'} alignItems={'center'}>\n      <Box\n        ml={iconNotOwnRow ? 0 : themes.dimensions.listItemDecoratorMarginLeft}\n        mr={themes.dimensions.condensedMarginBetween}>\n        {iconProps && (\n          <VAIcon\n            name={iconProps.name}\n            width={iconProps.width}\n            height={iconProps.height}\n            fill={iconProps.fill}\n            testID={iconProps.testID}\n          />\n        )}\n        {!iconProps && <Box mr={16} />}\n      </Box>\n      {iconNotOwnRow && (\n        <TextView flex={1} variant={variant} textAlign={textAlign} color={color}>\n          {text}\n        </TextView>\n      )}\n    </Box>\n  )\n}\n\nexport default TextLineWithIcon\n";var l=n(32666);const a={},s=void 0,c={unversionedId:"Flagship design library/Components/TextViews/TextLineWithIcon",id:"Flagship design library/Components/TextViews/TextLineWithIcon",title:"TextLineWithIcon",description:"",source:"@site/docs/Flagship design library/Components/TextViews/TextLineWithIcon.mdx",sourceDirName:"Flagship design library/Components/TextViews",slug:"/Flagship design library/Components/TextViews/TextLineWithIcon",permalink:"/va-mobile-app/docs/Flagship design library/Components/TextViews/TextLineWithIcon",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TextArea",permalink:"/va-mobile-app/docs/Flagship design library/Components/TextViews/TextArea"},next:{title:"TextLines",permalink:"/va-mobile-app/docs/Flagship design library/Components/TextViews/TextLines"}},m={},p=[],u="{textLinesWithIcon?.map((textObj: TextLineWithIconProps, index: number) => {\n    return <TextLineWithIcon key={index} {...textObj} />\n})}",d={toc:p,exampleString:u},x="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(x,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(l.Z,{componentName:"TextLineWithIcon",example:u,codeString:r,mdxType:"ComponentTopInfo"}))}h.isMDXComponent=!0}}]);