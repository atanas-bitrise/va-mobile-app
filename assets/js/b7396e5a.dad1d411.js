"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9958],{32666:(e,t,n)=>{n.d(t,{Z:()=>p});var r=n(67294),o=n(97405),a=n(22808),l=n(30433),s=n(41284),i=n(36005);const c=e=>{let{props:t}=e;return t?r.createElement(r.Fragment,null,i.ZP.isEmpty(t)?r.createElement("pre",{className:"preText"},"This component does not have props defined"):r.createElement("table",null,r.createElement("thead",null,r.createElement("tr",null,r.createElement("th",null,"Name"),r.createElement("th",null,"Type"),r.createElement("th",null,"Default Value"),r.createElement("th",null,"Required"),r.createElement("th",null,"Description"))),r.createElement("tbody",null,Object.keys(t).map((e=>r.createElement("tr",{key:e},r.createElement("td",null,r.createElement("code",null,e)),r.createElement("td",{style:{minWidth:200}},t[e].type?.name),r.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),r.createElement("td",null,t[e].required?"Yes":"No"),r.createElement("td",null,t[e].description))))))):null};function p(e){const t=(0,s.N)(e.componentName),{description:n,displayName:i,props:p}=t[0],m=`How to use the ${i} component`,d=`Full code for the ${i} component`;return r.createElement(r.Fragment,null,n,r.createElement("br",null),r.createElement("br",null),r.createElement(a.Z,null,r.createElement(l.Z,{value:"props",label:"Properties"},r.createElement(c,{props:p})),r.createElement(l.Z,{value:"example",label:"Example"},e.example&&r.createElement(o.Z,{title:m,className:"language-tsx test"},e.example)),r.createElement(l.Z,{value:"code",label:"Source Code"},e.codeString&&r.createElement(o.Z,{title:d,className:"language-tsx"},e.codeString)),r.createElement(l.Z,{value:"accessibility",label:"Accessibility"},r.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},41284:(e,t,n)=>{n.d(t,{N:()=>o});var r=n(52426);const o=e=>(0,r.ZP)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},85062:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>b,exampleString:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>m});var r=n(87462),o=(n(67294),n(3905));n(8209),n(97405);const a="import React, { FC } from 'react'\nimport { TouchableWithoutFeedback } from 'react-native'\n\nimport { useTheme } from 'utils/hooks'\n\nimport Box, { BoxProps } from './Box'\n\n/**\n *  Signifies the props that need to be passed in to {@link TextArea}\n */\nexport type TextAreaProps = {\n  /** onPress callback */\n  onPress?: () => void\n  /** prop to remove border */\n  noBorder?: boolean\n}\n\n/**\n * Text area block for content\n *\n * @returns TextView component\n */\nconst TextArea: FC<TextAreaProps> = ({ onPress, noBorder, children }) => {\n  const theme = useTheme()\n\n  const borderProps: BoxProps = noBorder\n    ? {}\n    : {\n        borderStyle: 'solid',\n        borderBottomWidth: 'default',\n        borderBottomColor: 'primary',\n        borderTopWidth: 'default',\n        borderTopColor: 'primary',\n      }\n\n  const boxProps: BoxProps = {\n    backgroundColor: 'contentBox',\n    p: theme.dimensions.cardPadding,\n  }\n\n  const _onPress = (): void => {\n    if (onPress) {\n      onPress()\n    }\n  }\n\n  if (onPress) {\n    return (\n      <TouchableWithoutFeedback onPress={_onPress}>\n        <Box {...boxProps}>{children}</Box>\n      </TouchableWithoutFeedback>\n    )\n  }\n\n  return (\n    <Box {...boxProps} {...borderProps}>\n      {children}\n    </Box>\n  )\n}\n\nexport default TextArea\n";var l=n(32666);const s={},i=void 0,c={unversionedId:"Flagship design library/Components/TextViews/TextArea",id:"Flagship design library/Components/TextViews/TextArea",title:"TextArea",description:"",source:"@site/docs/Flagship design library/Components/TextViews/TextArea.mdx",sourceDirName:"Flagship design library/Components/TextViews",slug:"/Flagship design library/Components/TextViews/TextArea",permalink:"/va-mobile-app/docs/Flagship design library/Components/TextViews/TextArea",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Text views",permalink:"/va-mobile-app/docs/Flagship design library/Components/TextViews/"},next:{title:"TextLineWithIcon",permalink:"/va-mobile-app/docs/Flagship design library/Components/TextViews/TextLineWithIcon"}},p={},m=[],d="<TextArea>\n    <Button \n    onPress={resetInAppReview} \n    label={'Reset In-App Review Actions'}  />\n</TextArea>",u={toc:m,exampleString:d},x="wrapper";function b(e){let{components:t,...n}=e;return(0,o.kt)(x,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(l.Z,{componentName:"TextArea",example:d,codeString:a,mdxType:"ComponentTopInfo"}))}b.isMDXComponent=!0}}]);