"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2030],{32666:(e,t,n)=>{n.d(t,{Z:()=>m});var r=n(67294),a=n(97405),o=n(22808),s=n(30433),l=n(41284),i=n(36005);const c=e=>{let{props:t}=e;return t?r.createElement(r.Fragment,null,i.ZP.isEmpty(t)?r.createElement("pre",{className:"preText"},"This component does not have props defined"):r.createElement("table",null,r.createElement("thead",null,r.createElement("tr",null,r.createElement("th",null,"Name"),r.createElement("th",null,"Type"),r.createElement("th",null,"Default Value"),r.createElement("th",null,"Required"),r.createElement("th",null,"Description"))),r.createElement("tbody",null,Object.keys(t).map((e=>r.createElement("tr",{key:e},r.createElement("td",null,r.createElement("code",null,e)),r.createElement("td",{style:{minWidth:200}},t[e].type?.name),r.createElement("td",null,t[e].defaultValue&&t[e].defaultValue.value.toString()),r.createElement("td",null,t[e].required?"Yes":"No"),r.createElement("td",null,t[e].description))))))):null};function m(e){const t=(0,l.N)(e.componentName),{description:n,displayName:i,props:m}=t[0],p=`How to use the ${i} component`,d=`Full code for the ${i} component`;return r.createElement(r.Fragment,null,n,r.createElement("br",null),r.createElement("br",null),r.createElement(o.Z,null,r.createElement(s.Z,{value:"props",label:"Properties"},r.createElement(c,{props:m})),r.createElement(s.Z,{value:"example",label:"Example"},e.example&&r.createElement(a.Z,{title:p,className:"language-tsx test"},e.example)),r.createElement(s.Z,{value:"code",label:"Source Code"},e.codeString&&r.createElement(a.Z,{title:d,className:"language-tsx"},e.codeString)),r.createElement(s.Z,{value:"accessibility",label:"Accessibility"},r.createElement("pre",{className:"preText"},e.accessibilityInfo))))}},41284:(e,t,n)=>{n.d(t,{N:()=>a});var r=n(52426);const a=e=>(0,r.ZP)()["docusaurus-plugin-react-docgen-typescript"].default.filter((t=>t.displayName===e))},91276:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>f,exampleString:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));n(8209),n(97405);const o="import React, { FC, RefObject } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { ScrollView } from 'react-native'\n\nimport { AlertBox, Box, LinkWithAnalytics, TextView, VABulletList } from 'components'\nimport { NAMESPACE } from 'constants/namespaces'\nimport { useRouteNavigation, useTheme } from 'utils/hooks'\n\nexport type MessageAlertProps = {\n  /** Optional boolean for determining when to focus on error alert boxes. */\n  focusOnError?: boolean\n  /**sets if there is validation errors */\n  hasValidationError?: boolean\n  /**sets if attempted to save a draft */\n  saveDraftAttempted?: boolean\n  /** optional ref for parent scroll view */\n  scrollViewRef?: RefObject<ScrollView>\n  /** optional list of alertbox failed reasons, supplied by FormWrapper component */\n  errorList?: { [key: number]: string }\n  /** sets if triage error returned from api */\n  replyTriageError?: boolean\n}\n\n/**Common component to show a message alert when saving or sending a secure message */\nconst MessageAlert: FC<MessageAlertProps> = ({\n  hasValidationError,\n  saveDraftAttempted,\n  scrollViewRef,\n  focusOnError,\n  errorList,\n  replyTriageError,\n}) => {\n  const theme = useTheme()\n  const { t } = useTranslation(NAMESPACE.COMMON)\n  const navigateTo = useRouteNavigation()\n\n  const onGoToInbox = (): void => {\n    navigateTo('SecureMessaging', { activeTab: 0 })\n  }\n\n  const bulletedListOfText = []\n  if (errorList) {\n    for (const key in errorList) {\n      if (errorList[key] !== '') {\n        bulletedListOfText.push(`${errorList[key]}`)\n      }\n    }\n  }\n\n  const text = saveDraftAttempted\n    ? t('secureMessaging.formMessage.saveDraft.validation.text')\n    : t('secureMessaging.formMessage.sendMessage.validation.text')\n\n  return hasValidationError ? (\n    <Box mb={theme.dimensions.standardMarginBetween}>\n      <AlertBox\n        border={'error'}\n        title={t('secureMessaging.formMessage.weNeedMoreInfo')}\n        text={text}\n        titleRole={'header'}\n        scrollViewRef={scrollViewRef}\n        focusOnError={focusOnError}>\n        <VABulletList listOfText={bulletedListOfText} />\n      </AlertBox>\n    </Box>\n  ) : replyTriageError ? (\n    <Box mb={theme.dimensions.standardMarginBetween}>\n      <AlertBox\n        border={'error'}\n        title={t('secureMessaging.sendError.title')}\n        titleRole={'header'}\n        scrollViewRef={scrollViewRef}\n        focusOnError={focusOnError}>\n        <TextView variant=\"MobileBody\" my={theme.dimensions.standardMarginBetween}>\n          {t('secureMessaging.reply.error.youCantSend')}\n        </TextView>\n        <TextView\n          variant=\"MobileBody\"\n          paragraphSpacing={true}\n          accessibilityLabel={t('secureMessaging.reply.error.ifYouThinkA11y')}>\n          {t('secureMessaging.reply.error.ifYouThink')}\n        </TextView>\n        <LinkWithAnalytics type=\"custom\" text={t('secureMessaging.goToInbox')} onPress={onGoToInbox} />\n      </AlertBox>\n    </Box>\n  ) : (\n    <></>\n  )\n}\nexport default MessageAlert\n";var s=n(32666);const l={},i=void 0,c={unversionedId:"Flagship design library/Components/Alerts and Progress/MessageAlert",id:"Flagship design library/Components/Alerts and Progress/MessageAlert",title:"MessageAlert",description:"",source:"@site/docs/Flagship design library/Components/Alerts and Progress/MessageAlert.mdx",sourceDirName:"Flagship design library/Components/Alerts and Progress",slug:"/Flagship design library/Components/Alerts and Progress/MessageAlert",permalink:"/va-mobile-app/docs/Flagship design library/Components/Alerts and Progress/MessageAlert",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Loading indicator",permalink:"/va-mobile-app/docs/Flagship design library/Components/Alerts and Progress/LoadingComponent"},next:{title:"Snackbar",permalink:"/va-mobile-app/docs/Flagship design library/Components/Alerts and Progress/Snackbar"}},m={},p=[],d="<MessageAlert\nhasValidationError={formContainsError}\nsaveDraftAttempted={onSaveDraftClicked}\nsavingDraft={savingDraft}\n/>",u={toc:p,exampleString:d},g="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(g,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(s.Z,{componentName:"MessageAlert",example:d,codeString:o,mdxType:"ComponentTopInfo"}))}f.isMDXComponent=!0}}]);